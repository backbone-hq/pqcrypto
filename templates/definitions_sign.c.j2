int {{ algorithm }}_crypto_sign_keypair(uint8_t *pk, uint8_t *sk);
int {{ algorithm }}_crypto_sign_signature(uint8_t *sig, size_t *siglen, const uint8_t *m, size_t mlen, const uint8_t *sk);
int {{ algorithm }}_crypto_sign_verify(const uint8_t *sig, size_t siglen, const uint8_t *m, size_t mlen, const uint8_t *pk);
int {{ algorithm }}_crypto_sign(uint8_t *sm, size_t *smlen, const uint8_t *m, size_t mlen, const uint8_t *sk);
int {{ algorithm }}_crypto_sign_open(uint8_t *m, size_t *mlen, const uint8_t *sm, size_t smlen, const uint8_t *pk);

#define {{ algorithm }}_CRYPTO_PUBLICKEYBYTES ...
#define {{ algorithm }}_CRYPTO_SECRETKEYBYTES ...
#define {{ algorithm }}_CRYPTO_BYTES ...
